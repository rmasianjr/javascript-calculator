{"version":3,"sources":["components/History.js","components/Display.js","components/Button/Button.js","components/Button/ClearButton.js","components/Button/ToggleButton.js","components/Button/DecimalButton.js","components/Button/OperationButton.js","components/Button/EqualButton.js","App.js","serviceWorker.js","index.js"],"names":["History","_ref","history","react_default","a","createElement","className","Display","state","scale","displayRef","React","createRef","this","node","current","actualScale","parentNode","offsetWidth","setState","displayValue","props","id","style","transform","concat","ref","Component","Button","children","onInputDigit","onClick","ClearButton","onClear","ToggleButton","onToggleSign","DecimalButton","onInputDecimal","OperationButton","onOperation","EqualButton","onEquals","App","prevValue","currentOperator","toOperation","pressedEquals","handleClearAll","_this","handleToggleSign","String","parseFloat","handleInputDigit","digit","_this$state","handleInputDecimal","_this$state2","includes","handleOperation","nextOperator","_this$state3","currentValue","replace","newDisplayValue","test","answer","calculate","newValue","Math","round","handleEquals","_this$state4","operation","_this$state5","components_History","components_Display","Button_ClearButton","Button_ToggleButton","Button_OperationButton","components_Button_Button","Button_DecimalButton","Button_EqualButton","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa1ad037.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst History = ({ history }) => <div className=\"history\">{history}</div>;\r\n\r\nHistory.propTypes = {\r\n  history: PropTypes.string.isRequired\r\n};\r\n\r\nexport default History;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    scale: 1\r\n  };\r\n  displayRef = React.createRef();\r\n\r\n  componentDidUpdate() {\r\n    const { scale } = this.state;\r\n\r\n    const node = this.displayRef.current;\r\n    const parentNode = node.parentNode;\r\n\r\n    const parentWidth = parentNode.offsetWidth - 45;\r\n    const displayWidth = node.offsetWidth;\r\n    const actualScale = parentWidth / displayWidth;\r\n\r\n    if (scale === actualScale) {\r\n      return;\r\n    }\r\n\r\n    if (actualScale < 1) {\r\n      this.setState({ scale: actualScale });\r\n    } else if (scale < 1) {\r\n      this.setState({ scale: 1 });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { scale } = this.state;\r\n    const { displayValue } = this.props;\r\n\r\n    return (\r\n      <div\r\n        id=\"display\"\r\n        style={{ transform: `scale(${scale})` }}\r\n        ref={this.displayRef}\r\n      >\r\n        {displayValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDisplay.propTypes = {\r\n  displayValue: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ children, id, onInputDigit }) => (\r\n  <button id={id} className=\"Button\" onClick={() => onInputDigit(children)}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  id: PropTypes.string,\r\n  onInputDigit: PropTypes.func\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst ClearButton = ({ children, onClear, id }) => (\r\n  <button id={id} className=\"Button\" onClick={() => onClear()}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nClearButton.propTypes = {\r\n  children: PropTypes.node,\r\n  id: PropTypes.string.isRequired,\r\n  onClear: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ClearButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst ToggleButton = ({ children, onToggleSign }) => (\r\n  <button className=\"Button\" onClick={() => onToggleSign()}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nToggleButton.propTypes = {\r\n  children: PropTypes.node,\r\n  onToggleSign: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst DecimalButton = ({ children, onInputDecimal, id }) => (\r\n  <button id={id} className=\"Button\" onClick={() => onInputDecimal()}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nDecimalButton.propTypes = {\r\n  children: PropTypes.node,\r\n  id: PropTypes.string.isRequired,\r\n  onInputDecimal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DecimalButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst OperationButton = ({ children, onOperation, id }) => (\r\n  <button id={id} className=\"Button\" onClick={() => onOperation(children)}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nOperationButton.propTypes = {\r\n  children: PropTypes.node,\r\n  onOperation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default OperationButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst EqualButton = ({ children, onEquals, id }) => (\r\n  <button id={id} className=\"Button\" onClick={() => onEquals()}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nEqualButton.propTypes = {\r\n  children: PropTypes.node,\r\n  id: PropTypes.string.isRequired,\r\n  onEquals: PropTypes.func.isRequired\r\n};\r\n\r\nexport default EqualButton;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport History from './components/History';\r\nimport Display from './components/Display';\r\nimport Button from './components/Button/Button';\r\nimport ClearButton from './components/Button/ClearButton';\r\nimport ToggleButton from './components/Button/ToggleButton';\r\nimport DecimalButton from './components/Button/DecimalButton';\r\nimport OperationButton from './components/Button/OperationButton';\r\nimport EqualButton from './components/Button/EqualButton';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    displayValue: '0',\r\n    history: '',\r\n    prevValue: null,\r\n    currentOperator: null,\r\n    toOperation: false,\r\n    pressedEquals: false\r\n  };\r\n\r\n  handleClearAll = () => {\r\n    this.setState({\r\n      displayValue: '0',\r\n      history: '',\r\n      currentOperator: null,\r\n      toOperation: false,\r\n      prevValue: null,\r\n      pressedEquals: false\r\n    });\r\n  };\r\n\r\n  handleToggleSign = () => {\r\n    const { displayValue } = this.state;\r\n\r\n    this.setState({\r\n      displayValue: String(parseFloat(displayValue) * -1)\r\n    });\r\n  };\r\n\r\n  handleInputDigit = digit => {\r\n    const { displayValue, toOperation, pressedEquals } = this.state;\r\n\r\n    if (toOperation) {\r\n      this.setState({\r\n        displayValue: digit,\r\n        toOperation: false,\r\n        pressedEquals: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        displayValue:\r\n          displayValue === '0' || pressedEquals ? digit : displayValue + digit,\r\n        pressedEquals: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleInputDecimal = () => {\r\n    const { displayValue, pressedEquals, toOperation } = this.state;\r\n\r\n    if (pressedEquals) {\r\n      this.setState({\r\n        displayValue: '0.',\r\n        pressedEquals: false,\r\n        prevValue: null\r\n      });\r\n    } else if (toOperation) {\r\n      this.setState({\r\n        displayValue: '0.',\r\n        toOperation: false\r\n      });\r\n    } else if (!displayValue.includes('.')) {\r\n      this.setState({\r\n        displayValue: displayValue + '.'\r\n      });\r\n    }\r\n  };\r\n\r\n  calculate(prevValue, currentValue, operation) {\r\n    switch (operation) {\r\n      case '÷':\r\n        return prevValue / currentValue;\r\n      case '×':\r\n        return prevValue * currentValue;\r\n      case '-':\r\n        return prevValue - currentValue;\r\n      case '+':\r\n        return prevValue + currentValue;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  handleOperation = nextOperator => {\r\n    const {\r\n      prevValue,\r\n      displayValue,\r\n      currentOperator,\r\n      history,\r\n      toOperation,\r\n      pressedEquals\r\n    } = this.state;\r\n    const currentValue = parseFloat(displayValue);\r\n\r\n    if (toOperation) {\r\n      this.setState({\r\n        currentOperator: nextOperator,\r\n        history: history.replace(/.$/, nextOperator)\r\n      });\r\n    } else {\r\n      const endsWithDot = /\\.$/.test(displayValue);\r\n      const newDisplayValue = endsWithDot\r\n        ? displayValue.replace(/\\./, '')\r\n        : displayValue;\r\n\r\n      this.setState({\r\n        currentOperator: nextOperator,\r\n        toOperation: true,\r\n        history: `${history} ${newDisplayValue} ${nextOperator}`,\r\n        pressedEquals: false\r\n      });\r\n\r\n      if (prevValue === null) {\r\n        this.setState({\r\n          prevValue: currentValue\r\n        });\r\n      } else if (pressedEquals) {\r\n        this.setState({\r\n          prevValue: currentValue\r\n        });\r\n      } else if (currentOperator) {\r\n        const answer = this.calculate(prevValue, currentValue, currentOperator);\r\n        const newValue = Math.round(answer * 10000000000) / 10000000000;\r\n\r\n        this.setState({\r\n          prevValue: newValue,\r\n          displayValue: String(newValue)\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleEquals = () => {\r\n    const {\r\n      prevValue,\r\n      displayValue,\r\n      currentOperator,\r\n      pressedEquals\r\n    } = this.state;\r\n\r\n    if (!currentOperator || pressedEquals) {\r\n      this.setState({\r\n        pressedEquals: true,\r\n        toOperation: false\r\n      });\r\n    } else {\r\n      const answer = this.calculate(\r\n        prevValue,\r\n        parseFloat(displayValue),\r\n        currentOperator\r\n      );\r\n      const newValue = Math.round(answer * 10000000000) / 10000000000;\r\n\r\n      this.setState({\r\n        pressedEquals: true,\r\n        history: '',\r\n        prevValue: newValue,\r\n        displayValue: String(newValue),\r\n        toOperation: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { displayValue, history } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"calculator\">\r\n          <div className=\"screen\">\r\n            <History history={history} />\r\n            <Display displayValue={displayValue} />\r\n          </div>\r\n          <div className=\"calculator-keys\">\r\n            <div className=\"main-keys\">\r\n              <div className=\"special-keys\">\r\n                <ClearButton id=\"clear\" onClear={this.handleClearAll}>\r\n                  AC\r\n                </ClearButton>\r\n                <ToggleButton onToggleSign={this.handleToggleSign}>\r\n                  ±\r\n                </ToggleButton>\r\n                <OperationButton id=\"divide\" onOperation={this.handleOperation}>\r\n                  ÷\r\n                </OperationButton>\r\n              </div>\r\n              <div className=\"num-keys\">\r\n                <Button id=\"nine\" onInputDigit={this.handleInputDigit}>\r\n                  9\r\n                </Button>\r\n                <Button id=\"eight\" onInputDigit={this.handleInputDigit}>\r\n                  8\r\n                </Button>\r\n                <Button id=\"seven\" onInputDigit={this.handleInputDigit}>\r\n                  7\r\n                </Button>\r\n                <Button id=\"six\" onInputDigit={this.handleInputDigit}>\r\n                  6\r\n                </Button>\r\n                <Button id=\"five\" onInputDigit={this.handleInputDigit}>\r\n                  5\r\n                </Button>\r\n                <Button id=\"four\" onInputDigit={this.handleInputDigit}>\r\n                  4\r\n                </Button>\r\n                <Button id=\"three\" onInputDigit={this.handleInputDigit}>\r\n                  3\r\n                </Button>\r\n                <Button id=\"two\" onInputDigit={this.handleInputDigit}>\r\n                  2\r\n                </Button>\r\n                <Button id=\"one\" onInputDigit={this.handleInputDigit}>\r\n                  1\r\n                </Button>\r\n                <DecimalButton\r\n                  id=\"decimal\"\r\n                  onInputDecimal={this.handleInputDecimal}\r\n                >\r\n                  .\r\n                </DecimalButton>\r\n                <Button id=\"zero\" onInputDigit={this.handleInputDigit}>\r\n                  0\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"operation-keys\">\r\n              <OperationButton id=\"multiply\" onOperation={this.handleOperation}>\r\n                ×\r\n              </OperationButton>\r\n              <OperationButton id=\"subtract\" onOperation={this.handleOperation}>\r\n                -\r\n              </OperationButton>\r\n              <OperationButton id=\"add\" onOperation={this.handleOperation}>\r\n                +\r\n              </OperationButton>\r\n              <EqualButton id=\"equals\" onEquals={this.handleEquals}>\r\n                =\r\n              </EqualButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer className=\"footer\">\r\n          <span>\r\n            Created by:{' '}\r\n            <a\r\n              className=\"footer-link\"\r\n              href=\"https://twitter.com/rmasianjr\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Ricardo Masian Jr.\r\n            </a>\r\n          </span>\r\n          <span> | </span>\r\n          <span>\r\n            <a\r\n              className=\"footer-link\"\r\n              href=\"https://github.com/rmasianjr/javascript-calculator\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              View source code\r\n            </a>\r\n          </span>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}